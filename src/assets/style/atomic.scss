@import "vars";

@each $typeK, $typeV in map-get(map-get($classMap, "flex"), "type") {
  @each $jcK, $jcV in map-get(map-get($classMap, "flex"), "jc") {
    @each $aiK, $aiV in map-get(map-get($classMap, "flex"), "ai") {
      @each $colV in map-get(map-get($classMap, "flex"), "isColList") {
        @each $warpV in map-get(map-get($classMap, "flex"), "isWarpList") {
          .#{$typeK}-#{$jcK}#{$aiK}#{if($colV==0, "", "l")}#{if($warpV==0, '', 'w')} {
            @include flexHandler($typeV, $jcV, $aiV, $colV, $warpV);
          }
        }
      }
    }
  }
}

@each $colorK, $colorV in map-get($colorMap, "color") {
  @each $propK, $propV in map-get($classMap, "color") {
    @if ($propK== "bd") {
      @for $num from 1 through 2 {
        .#{$propK}-#{$colorK}_#{$num} {
          #{$propV}: #{$num}px solid $colorV;
        }
      }
    } @else {
      .#{$propK}-#{$colorK} {
        #{$propV}: $colorV;
      }
    }
  }
}

@each $colorK, $colorV in $colorList {
}

  @each $propK, $propV in map-get($classMap, "margin") {
    @for $num from 0 through 120 {

      $size: if($num<=10, $num, if($num<26, 2 * $num - 10, 4 * $num - 60));
    .#{$propK}-#{$size} {
      #{$propV}: #{$size}px;
    }
  }
}
  @each $propK, $propV in map-get($classMap, "margin") {
    @for $num from 0 through 10 {

      $size: $num*100;
    .w-#{$size} {
      width: #{$size}px;
    }
  }
}
.elp1 {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.elp2 {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}

.elp5 {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 5;
  -webkit-box-orient: vertical;
}

.elp10 {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 10;
  -webkit-box-orient: vertical;
}

.op {
  color: transparent;
  background-color: transparent;
  opacity: 0;
  filter: alpha(opacity=0);
}

.scroll-hidden {
  overflow: hidden;
}

.scroll-auto {
  overflow: auto;
}

.clearfix {
  zoom: 1;

  &:after {
    display: block;
    clear: both;
    content: "";
  }
}

.fl {
  float: left;
}

.fr {
  float: right;
}

.rel {
  position: relative;
}

.none {
  display: none;
}

.block {
  display: block;
}

.inline {
  display: inline;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.flex-1 {
  flex: 1;
}

.flex-1_hidden {
  flex: 1;
  overflow: hidden;
}

// 不压缩
.flex-s-0 {
  flex-shrink: 0;
}

.pos-center {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.margin-center {
  margin-left: auto;
  margin-right: auto;
  margin-top: 0;
  margin-bottom: 0;
}

.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-justify {
  text-align: justify;
}

.force-wrap {
  white-space: pre-wrap;
  word-wrap: break-word;
  word-break: break-all;
}

.force-nowrap {
  white-space: nowrap;
}

.no-style-link {
  text-decoration: none;
  color: inherit;
}

.no-select {
  user-select: none;
}

.all-select {
  user-select: all;
}

.fw-n {
  font-weight: normal;
}

.fw-b {
  font-weight: 600;
}

.fw-l {
  font-weight: lighter;
}

.fs-i {
  font-style: italic;
}

.vl {
  height: 100%;
  width: 1px;
  background: $cBorder;
}

.vl-auto {
  height: auto;
  width: 1px;
  background: $cBorder;
}

.hl {
  height: 1px;
  width: 100%;
  background: $cBorder;
}

.cursor {
  cursor: pointer;
}

.cursor-disable {
  cursor: not-allowed;
}

.min-content {
  width: min-content;
}

.max-content {
  width: max-content;
}

.lh-1 {
  line-height: 1 !important;
}

.lh-n {
  line-height: 1.4 !important;
}

// 磨砂玻璃效果
.glass {
  backdrop-filter: saturate(180%) blur(12px);
}

.border-0 {
  border: 0;
}

.border-round {
  border-radius: 50%;
}

.border-round_2 {
  border-radius: 2px;
}

.border-round_4 {
  border-radius: 4px;
}

.border-round_8 {
  border-radius: 8px;
}

.w100 {
  width: 100%;
}

.flex-item-js{
  justify-self: flex-start;
}
.flex-item-as{
  align-self: flex-start;
}
.flex-item-je{
  justify-self: end;
}
.flex-item-ae{
  align-self: flex-end;
}

.ff-din {
  font-family: 'DIN', DIN, DIN-Medium;
}
.ff-din-bold {
  font-family: 'DIN-Bold', DIN, DIN-Medium;
}
.ff-douyu {
  font-family: 'DOUYU', DOUYU;
}
.fs-10 {
  font-size: 12px;
  transform: scale(.8333);
  transform-origin: left;
}

.fs-10-center {
  font-size: 12px;
  transform: scale(.8333);
  transform-origin: center;
}
